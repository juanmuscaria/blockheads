// Generated by jextract

package com.juanmuscaria.foreign.enet;

import java.lang.foreign.Arena;
import java.lang.foreign.MemorySegment;

/**
 * {@snippet :
 * void (*ENetPacketFreeCallback)(struct _ENetPacket*);
 * }
 */
public interface ENetPacketFreeCallback {

    void apply(java.lang.foreign.MemorySegment _x0);
    static MemorySegment allocate(ENetPacketFreeCallback fi, Arena scope) {
      return RuntimeHelper.upcallStub(constants$15.const$3, fi, constants$11.const$1, scope);
    }
    static ENetPacketFreeCallback ofAddress(MemorySegment addr, Arena arena) {
        MemorySegment symbol = addr.reinterpret(arena, null);
        return (java.lang.foreign.MemorySegment __x0) -> {
            try {
              constants$13.const$4.invokeExact(symbol, __x0);
            } catch (Throwable ex$) {
                throw new AssertionError("should not reach here", ex$);
            }
        };
    }
}


