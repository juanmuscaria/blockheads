// Generated by jextract

package com.juanmuscaria.foreign.enet;

import java.lang.foreign.AddressLayout;
import java.lang.foreign.MemorySegment;
import java.lang.invoke.MethodHandle;

import static java.lang.foreign.ValueLayout.*;

public class ENet {

  public static final OfByte C_CHAR = JAVA_BYTE;
  public static final OfShort C_SHORT = JAVA_SHORT;
  public static final OfInt C_INT = JAVA_INT;
  public static final OfLong C_LONG = JAVA_LONG;
  public static final OfLong C_LONG_LONG = JAVA_LONG;
  public static final OfFloat C_FLOAT = JAVA_FLOAT;
  public static final OfDouble C_DOUBLE = JAVA_DOUBLE;
  public static final AddressLayout C_POINTER = RuntimeHelper.POINTER;

  /**
   * {@snippet :
   * #define ENET_VERSION_MAJOR 1
   *}
   */
  public static int ENET_VERSION_MAJOR() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * #define ENET_VERSION_MINOR 3
   *}
   */
  public static int ENET_VERSION_MINOR() {
    return (int) 3L;
  }

  /**
   * {@snippet :
   * #define ENET_VERSION_PATCH 17
   *}
   */
  public static int ENET_VERSION_PATCH() {
    return (int) 17L;
  }

  /**
   * {@snippet :
   * #define ENET_HOST_ANY 0
   *}
   */
  public static int ENET_HOST_ANY() {
    return (int) 0L;
  }

  /**
   * {@snippet :
   * #define ENET_PORT_ANY 0
   *}
   */
  public static int ENET_PORT_ANY() {
    return (int) 0L;
  }

  /**
   * {@snippet :
   * typedef unsigned long size_t;
   *}
   */
  public static final OfLong size_t = JAVA_LONG;
  /**
   * {@snippet :
   * typedef int wchar_t;
   *}
   */
  public static final OfInt wchar_t = JAVA_INT;
  /**
   * {@snippet :
   * typedef unsigned char enet_uint8;
   *}
   */
  public static final OfByte enet_uint8 = JAVA_BYTE;
  /**
   * {@snippet :
   * typedef unsigned short enet_uint16;
   *}
   */
  public static final OfShort enet_uint16 = JAVA_SHORT;
  /**
   * {@snippet :
   * typedef unsigned int enet_uint32;
   *}
   */
  public static final OfInt enet_uint32 = JAVA_INT;

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MINIMUM_MTU = 576;
   *}
   */
  public static int ENET_PROTOCOL_MINIMUM_MTU() {
    return (int) 576L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MAXIMUM_MTU = 4096;
   *}
   */
  public static int ENET_PROTOCOL_MAXIMUM_MTU() {
    return (int) 4096L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MAXIMUM_PACKET_COMMANDS = 32;
   *}
   */
  public static int ENET_PROTOCOL_MAXIMUM_PACKET_COMMANDS() {
    return (int) 32L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MINIMUM_WINDOW_SIZE = 4096;
   *}
   */
  public static int ENET_PROTOCOL_MINIMUM_WINDOW_SIZE() {
    return (int) 4096L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MAXIMUM_WINDOW_SIZE = 65536;
   *}
   */
  public static int ENET_PROTOCOL_MAXIMUM_WINDOW_SIZE() {
    return (int) 65536L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MINIMUM_CHANNEL_COUNT = 1;
   *}
   */
  public static int ENET_PROTOCOL_MINIMUM_CHANNEL_COUNT() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MAXIMUM_CHANNEL_COUNT = 255;
   *}
   */
  public static int ENET_PROTOCOL_MAXIMUM_CHANNEL_COUNT() {
    return (int) 255L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MAXIMUM_PEER_ID = 4095;
   *}
   */
  public static int ENET_PROTOCOL_MAXIMUM_PEER_ID() {
    return (int) 4095L;
  }

  /**
   * {@snippet :
   * enum .ENET_PROTOCOL_MAXIMUM_FRAGMENT_COUNT = 1048576;
   *}
   */
  public static int ENET_PROTOCOL_MAXIMUM_FRAGMENT_COUNT() {
    return (int) 1048576L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_NONE = 0;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_NONE() {
    return (int) 0L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_ACKNOWLEDGE = 1;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_ACKNOWLEDGE() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_CONNECT = 2;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_CONNECT() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_VERIFY_CONNECT = 3;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_VERIFY_CONNECT() {
    return (int) 3L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_DISCONNECT = 4;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_DISCONNECT() {
    return (int) 4L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_PING = 5;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_PING() {
    return (int) 5L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_SEND_RELIABLE = 6;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_SEND_RELIABLE() {
    return (int) 6L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_SEND_UNRELIABLE = 7;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_SEND_UNRELIABLE() {
    return (int) 7L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_SEND_FRAGMENT = 8;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_SEND_FRAGMENT() {
    return (int) 8L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_SEND_UNSEQUENCED = 9;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_SEND_UNSEQUENCED() {
    return (int) 9L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_BANDWIDTH_LIMIT = 10;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_BANDWIDTH_LIMIT() {
    return (int) 10L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_THROTTLE_CONFIGURE = 11;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_THROTTLE_CONFIGURE() {
    return (int) 11L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_SEND_UNRELIABLE_FRAGMENT = 12;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_SEND_UNRELIABLE_FRAGMENT() {
    return (int) 12L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_COUNT = 13;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_COUNT() {
    return (int) 13L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolCommand.ENET_PROTOCOL_COMMAND_MASK = 15;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_MASK() {
    return (int) 15L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolFlag.ENET_PROTOCOL_COMMAND_FLAG_ACKNOWLEDGE = 128;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_FLAG_ACKNOWLEDGE() {
    return (int) 128L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolFlag.ENET_PROTOCOL_COMMAND_FLAG_UNSEQUENCED = 64;
   *}
   */
  public static int ENET_PROTOCOL_COMMAND_FLAG_UNSEQUENCED() {
    return (int) 64L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolFlag.ENET_PROTOCOL_HEADER_FLAG_COMPRESSED = 16384;
   *}
   */
  public static int ENET_PROTOCOL_HEADER_FLAG_COMPRESSED() {
    return (int) 16384L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolFlag.ENET_PROTOCOL_HEADER_FLAG_SENT_TIME = 32768;
   *}
   */
  public static int ENET_PROTOCOL_HEADER_FLAG_SENT_TIME() {
    return (int) 32768L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolFlag.ENET_PROTOCOL_HEADER_FLAG_MASK = 49152;
   *}
   */
  public static int ENET_PROTOCOL_HEADER_FLAG_MASK() {
    return (int) 49152L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolFlag.ENET_PROTOCOL_HEADER_SESSION_MASK = 12288;
   *}
   */
  public static int ENET_PROTOCOL_HEADER_SESSION_MASK() {
    return (int) 12288L;
  }

  /**
   * {@snippet :
   * enum _ENetProtocolFlag.ENET_PROTOCOL_HEADER_SESSION_SHIFT = 12;
   *}
   */
  public static int ENET_PROTOCOL_HEADER_SESSION_SHIFT() {
    return (int) 12L;
  }

  /**
   * {@snippet :
   * typedef struct _ENetListNode* ENetListIterator;
   *}
   */
  public static final AddressLayout ENetListIterator = RuntimeHelper.POINTER;

  public static MethodHandle enet_list_clear$MH() {
    return RuntimeHelper.requireNonNull(constants$11.const$2, "enet_list_clear");
  }

  /**
   * {@snippet :
   * void enet_list_clear(ENetList*);
   *}
   */
  public static void enet_list_clear(MemorySegment x0) {
    var mh$ = enet_list_clear$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_list_insert$MH() {
    return RuntimeHelper.requireNonNull(constants$11.const$4, "enet_list_insert");
  }

  /**
   * {@snippet :
   * ENetListIterator enet_list_insert(ENetListIterator, void*);
   *}
   */
  public static MemorySegment enet_list_insert(MemorySegment x0, MemorySegment x1) {
    var mh$ = enet_list_insert$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_list_remove$MH() {
    return RuntimeHelper.requireNonNull(constants$11.const$6, "enet_list_remove");
  }

  /**
   * {@snippet :
   * void* enet_list_remove(ENetListIterator);
   *}
   */
  public static MemorySegment enet_list_remove(MemorySegment x0) {
    var mh$ = enet_list_remove$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_list_move$MH() {
    return RuntimeHelper.requireNonNull(constants$12.const$1, "enet_list_move");
  }

  /**
   * {@snippet :
   * ENetListIterator enet_list_move(ENetListIterator, void*, void*);
   *}
   */
  public static MemorySegment enet_list_move(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
    var mh$ = enet_list_move$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_list_size$MH() {
    return RuntimeHelper.requireNonNull(constants$12.const$3, "enet_list_size");
  }

  /**
   * {@snippet :
   * size_t enet_list_size(ENetList*);
   *}
   */
  public static long enet_list_size(MemorySegment x0) {
    var mh$ = enet_list_size$MH();
    try {
      return (long) mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_malloc$MH() {
    return RuntimeHelper.requireNonNull(constants$14.const$4, "enet_malloc");
  }

  /**
   * {@snippet :
   * void* enet_malloc(size_t);
   *}
   */
  public static MemorySegment enet_malloc(long x0) {
    var mh$ = enet_malloc$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_free$MH() {
    return RuntimeHelper.requireNonNull(constants$14.const$5, "enet_free");
  }

  /**
   * {@snippet :
   * void enet_free(void*);
   *}
   */
  public static void enet_free(MemorySegment x0) {
    var mh$ = enet_free$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  /**
   * {@snippet :
   * typedef unsigned int ENetVersion;
   *}
   */
  public static final OfInt ENetVersion = JAVA_INT;

  /**
   * {@snippet :
   * enum _ENetSocketType.ENET_SOCKET_TYPE_STREAM = 1;
   *}
   */
  public static int ENET_SOCKET_TYPE_STREAM() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketType.ENET_SOCKET_TYPE_DATAGRAM = 2;
   *}
   */
  public static int ENET_SOCKET_TYPE_DATAGRAM() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketWait.ENET_SOCKET_WAIT_NONE = 0;
   *}
   */
  public static int ENET_SOCKET_WAIT_NONE() {
    return (int) 0L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketWait.ENET_SOCKET_WAIT_SEND = 1;
   *}
   */
  public static int ENET_SOCKET_WAIT_SEND() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketWait.ENET_SOCKET_WAIT_RECEIVE = 2;
   *}
   */
  public static int ENET_SOCKET_WAIT_RECEIVE() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketWait.ENET_SOCKET_WAIT_INTERRUPT = 4;
   *}
   */
  public static int ENET_SOCKET_WAIT_INTERRUPT() {
    return (int) 4L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_NONBLOCK = 1;
   *}
   */
  public static int ENET_SOCKOPT_NONBLOCK() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_BROADCAST = 2;
   *}
   */
  public static int ENET_SOCKOPT_BROADCAST() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_RCVBUF = 3;
   *}
   */
  public static int ENET_SOCKOPT_RCVBUF() {
    return (int) 3L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_SNDBUF = 4;
   *}
   */
  public static int ENET_SOCKOPT_SNDBUF() {
    return (int) 4L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_REUSEADDR = 5;
   *}
   */
  public static int ENET_SOCKOPT_REUSEADDR() {
    return (int) 5L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_RCVTIMEO = 6;
   *}
   */
  public static int ENET_SOCKOPT_RCVTIMEO() {
    return (int) 6L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_SNDTIMEO = 7;
   *}
   */
  public static int ENET_SOCKOPT_SNDTIMEO() {
    return (int) 7L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_ERROR = 8;
   *}
   */
  public static int ENET_SOCKOPT_ERROR() {
    return (int) 8L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketOption.ENET_SOCKOPT_NODELAY = 9;
   *}
   */
  public static int ENET_SOCKOPT_NODELAY() {
    return (int) 9L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketShutdown.ENET_SOCKET_SHUTDOWN_READ = 0;
   *}
   */
  public static int ENET_SOCKET_SHUTDOWN_READ() {
    return (int) 0L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketShutdown.ENET_SOCKET_SHUTDOWN_WRITE = 1;
   *}
   */
  public static int ENET_SOCKET_SHUTDOWN_WRITE() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetSocketShutdown.ENET_SOCKET_SHUTDOWN_READ_WRITE = 2;
   *}
   */
  public static int ENET_SOCKET_SHUTDOWN_READ_WRITE() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetPacketFlag.ENET_PACKET_FLAG_RELIABLE = 1;
   *}
   */
  public static int ENET_PACKET_FLAG_RELIABLE() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetPacketFlag.ENET_PACKET_FLAG_UNSEQUENCED = 2;
   *}
   */
  public static int ENET_PACKET_FLAG_UNSEQUENCED() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetPacketFlag.ENET_PACKET_FLAG_NO_ALLOCATE = 4;
   *}
   */
  public static int ENET_PACKET_FLAG_NO_ALLOCATE() {
    return (int) 4L;
  }

  /**
   * {@snippet :
   * enum _ENetPacketFlag.ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT = 8;
   *}
   */
  public static int ENET_PACKET_FLAG_UNRELIABLE_FRAGMENT() {
    return (int) 8L;
  }

  /**
   * {@snippet :
   * enum _ENetPacketFlag.ENET_PACKET_FLAG_SENT = 256;
   *}
   */
  public static int ENET_PACKET_FLAG_SENT() {
    return (int) 256L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_DISCONNECTED = 0;
   *}
   */
  public static int ENET_PEER_STATE_DISCONNECTED() {
    return (int) 0L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_CONNECTING = 1;
   *}
   */
  public static int ENET_PEER_STATE_CONNECTING() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_ACKNOWLEDGING_CONNECT = 2;
   *}
   */
  public static int ENET_PEER_STATE_ACKNOWLEDGING_CONNECT() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_CONNECTION_PENDING = 3;
   *}
   */
  public static int ENET_PEER_STATE_CONNECTION_PENDING() {
    return (int) 3L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_CONNECTION_SUCCEEDED = 4;
   *}
   */
  public static int ENET_PEER_STATE_CONNECTION_SUCCEEDED() {
    return (int) 4L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_CONNECTED = 5;
   *}
   */
  public static int ENET_PEER_STATE_CONNECTED() {
    return (int) 5L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_DISCONNECT_LATER = 6;
   *}
   */
  public static int ENET_PEER_STATE_DISCONNECT_LATER() {
    return (int) 6L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_DISCONNECTING = 7;
   *}
   */
  public static int ENET_PEER_STATE_DISCONNECTING() {
    return (int) 7L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT = 8;
   *}
   */
  public static int ENET_PEER_STATE_ACKNOWLEDGING_DISCONNECT() {
    return (int) 8L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerState.ENET_PEER_STATE_ZOMBIE = 9;
   *}
   */
  public static int ENET_PEER_STATE_ZOMBIE() {
    return (int) 9L;
  }

  /**
   * {@snippet :
   * enum .ENET_HOST_RECEIVE_BUFFER_SIZE = 262144;
   *}
   */
  public static int ENET_HOST_RECEIVE_BUFFER_SIZE() {
    return (int) 262144L;
  }

  /**
   * {@snippet :
   * enum .ENET_HOST_SEND_BUFFER_SIZE = 262144;
   *}
   */
  public static int ENET_HOST_SEND_BUFFER_SIZE() {
    return (int) 262144L;
  }

  /**
   * {@snippet :
   * enum .ENET_HOST_BANDWIDTH_THROTTLE_INTERVAL = 1000;
   *}
   */
  public static int ENET_HOST_BANDWIDTH_THROTTLE_INTERVAL() {
    return (int) 1000L;
  }

  /**
   * {@snippet :
   * enum .ENET_HOST_DEFAULT_MTU = 1400;
   *}
   */
  public static int ENET_HOST_DEFAULT_MTU() {
    return (int) 1400L;
  }

  /**
   * {@snippet :
   * enum .ENET_HOST_DEFAULT_MAXIMUM_PACKET_SIZE = 33554432;
   *}
   */
  public static int ENET_HOST_DEFAULT_MAXIMUM_PACKET_SIZE() {
    return (int) 33554432L;
  }

  /**
   * {@snippet :
   * enum .ENET_HOST_DEFAULT_MAXIMUM_WAITING_DATA = 33554432;
   *}
   */
  public static int ENET_HOST_DEFAULT_MAXIMUM_WAITING_DATA() {
    return (int) 33554432L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_DEFAULT_ROUND_TRIP_TIME = 500;
   *}
   */
  public static int ENET_PEER_DEFAULT_ROUND_TRIP_TIME() {
    return (int) 500L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_DEFAULT_PACKET_THROTTLE = 32;
   *}
   */
  public static int ENET_PEER_DEFAULT_PACKET_THROTTLE() {
    return (int) 32L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PACKET_THROTTLE_SCALE = 32;
   *}
   */
  public static int ENET_PEER_PACKET_THROTTLE_SCALE() {
    return (int) 32L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PACKET_THROTTLE_COUNTER = 7;
   *}
   */
  public static int ENET_PEER_PACKET_THROTTLE_COUNTER() {
    return (int) 7L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PACKET_THROTTLE_ACCELERATION = 2;
   *}
   */
  public static int ENET_PEER_PACKET_THROTTLE_ACCELERATION() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PACKET_THROTTLE_DECELERATION = 2;
   *}
   */
  public static int ENET_PEER_PACKET_THROTTLE_DECELERATION() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PACKET_THROTTLE_INTERVAL = 5000;
   *}
   */
  public static int ENET_PEER_PACKET_THROTTLE_INTERVAL() {
    return (int) 5000L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PACKET_LOSS_SCALE = 65536;
   *}
   */
  public static int ENET_PEER_PACKET_LOSS_SCALE() {
    return (int) 65536L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PACKET_LOSS_INTERVAL = 10000;
   *}
   */
  public static int ENET_PEER_PACKET_LOSS_INTERVAL() {
    return (int) 10000L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_WINDOW_SIZE_SCALE = 65536;
   *}
   */
  public static int ENET_PEER_WINDOW_SIZE_SCALE() {
    return (int) 65536L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_TIMEOUT_LIMIT = 32;
   *}
   */
  public static int ENET_PEER_TIMEOUT_LIMIT() {
    return (int) 32L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_TIMEOUT_MINIMUM = 5000;
   *}
   */
  public static int ENET_PEER_TIMEOUT_MINIMUM() {
    return (int) 5000L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_TIMEOUT_MAXIMUM = 30000;
   *}
   */
  public static int ENET_PEER_TIMEOUT_MAXIMUM() {
    return (int) 30000L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_PING_INTERVAL = 500;
   *}
   */
  public static int ENET_PEER_PING_INTERVAL() {
    return (int) 500L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_UNSEQUENCED_WINDOWS = 64;
   *}
   */
  public static int ENET_PEER_UNSEQUENCED_WINDOWS() {
    return (int) 64L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_UNSEQUENCED_WINDOW_SIZE = 1024;
   *}
   */
  public static int ENET_PEER_UNSEQUENCED_WINDOW_SIZE() {
    return (int) 1024L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_FREE_UNSEQUENCED_WINDOWS = 32;
   *}
   */
  public static int ENET_PEER_FREE_UNSEQUENCED_WINDOWS() {
    return (int) 32L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_RELIABLE_WINDOWS = 16;
   *}
   */
  public static int ENET_PEER_RELIABLE_WINDOWS() {
    return (int) 16L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_RELIABLE_WINDOW_SIZE = 4096;
   *}
   */
  public static int ENET_PEER_RELIABLE_WINDOW_SIZE() {
    return (int) 4096L;
  }

  /**
   * {@snippet :
   * enum .ENET_PEER_FREE_RELIABLE_WINDOWS = 8;
   *}
   */
  public static int ENET_PEER_FREE_RELIABLE_WINDOWS() {
    return (int) 8L;
  }

  /**
   * {@snippet :
   * enum _ENetPeerFlag.ENET_PEER_FLAG_NEEDS_DISPATCH = 1;
   *}
   */
  public static int ENET_PEER_FLAG_NEEDS_DISPATCH() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetEventType.ENET_EVENT_TYPE_NONE = 0;
   *}
   */
  public static int ENET_EVENT_TYPE_NONE() {
    return (int) 0L;
  }

  /**
   * {@snippet :
   * enum _ENetEventType.ENET_EVENT_TYPE_CONNECT = 1;
   *}
   */
  public static int ENET_EVENT_TYPE_CONNECT() {
    return (int) 1L;
  }

  /**
   * {@snippet :
   * enum _ENetEventType.ENET_EVENT_TYPE_DISCONNECT = 2;
   *}
   */
  public static int ENET_EVENT_TYPE_DISCONNECT() {
    return (int) 2L;
  }

  /**
   * {@snippet :
   * enum _ENetEventType.ENET_EVENT_TYPE_RECEIVE = 3;
   *}
   */
  public static int ENET_EVENT_TYPE_RECEIVE() {
    return (int) 3L;
  }

  public static MethodHandle enet_initialize$MH() {
    return RuntimeHelper.requireNonNull(constants$38.const$6, "enet_initialize");
  }

  /**
   * {@snippet :
   * int enet_initialize();
   *}
   */
  public static int enet_initialize() {
    var mh$ = enet_initialize$MH();
    try {
      return (int) mh$.invokeExact();
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_initialize_with_callbacks$MH() {
    return RuntimeHelper.requireNonNull(constants$39.const$1, "enet_initialize_with_callbacks");
  }

  /**
   * {@snippet :
   * int enet_initialize_with_callbacks(ENetVersion version, const ENetCallbacks* inits);
   *}
   */
  public static int enet_initialize_with_callbacks(int version, MemorySegment inits) {
    var mh$ = enet_initialize_with_callbacks$MH();
    try {
      return (int) mh$.invokeExact(version, inits);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_deinitialize$MH() {
    return RuntimeHelper.requireNonNull(constants$39.const$2, "enet_deinitialize");
  }

  /**
   * {@snippet :
   * void enet_deinitialize();
   *}
   */
  public static void enet_deinitialize() {
    var mh$ = enet_deinitialize$MH();
    try {
      mh$.invokeExact();
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_linked_version$MH() {
    return RuntimeHelper.requireNonNull(constants$39.const$3, "enet_linked_version");
  }

  /**
   * {@snippet :
   * ENetVersion enet_linked_version();
   *}
   */
  public static int enet_linked_version() {
    var mh$ = enet_linked_version$MH();
    try {
      return (int) mh$.invokeExact();
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_time_get$MH() {
    return RuntimeHelper.requireNonNull(constants$39.const$4, "enet_time_get");
  }

  /**
   * {@snippet :
   * enet_uint32 enet_time_get();
   *}
   */
  public static int enet_time_get() {
    var mh$ = enet_time_get$MH();
    try {
      return (int) mh$.invokeExact();
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_time_set$MH() {
    return RuntimeHelper.requireNonNull(constants$39.const$6, "enet_time_set");
  }

  /**
   * {@snippet :
   * void enet_time_set(enet_uint32);
   *}
   */
  public static void enet_time_set(int x0) {
    var mh$ = enet_time_set$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_create$MH() {
    return RuntimeHelper.requireNonNull(constants$40.const$1, "enet_socket_create");
  }

  /**
   * {@snippet :
   * ENetSocket enet_socket_create(ENetSocketType);
   *}
   */
  public static int enet_socket_create(int x0) {
    var mh$ = enet_socket_create$MH();
    try {
      return (int) mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_bind$MH() {
    return RuntimeHelper.requireNonNull(constants$40.const$2, "enet_socket_bind");
  }

  /**
   * {@snippet :
   * int enet_socket_bind(ENetSocket, const ENetAddress*);
   *}
   */
  public static int enet_socket_bind(int x0, MemorySegment x1) {
    var mh$ = enet_socket_bind$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_get_address$MH() {
    return RuntimeHelper.requireNonNull(constants$40.const$3, "enet_socket_get_address");
  }

  /**
   * {@snippet :
   * int enet_socket_get_address(ENetSocket, ENetAddress*);
   *}
   */
  public static int enet_socket_get_address(int x0, MemorySegment x1) {
    var mh$ = enet_socket_get_address$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_listen$MH() {
    return RuntimeHelper.requireNonNull(constants$40.const$5, "enet_socket_listen");
  }

  /**
   * {@snippet :
   * int enet_socket_listen(ENetSocket, int);
   *}
   */
  public static int enet_socket_listen(int x0, int x1) {
    var mh$ = enet_socket_listen$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_accept$MH() {
    return RuntimeHelper.requireNonNull(constants$41.const$0, "enet_socket_accept");
  }

  /**
   * {@snippet :
   * ENetSocket enet_socket_accept(ENetSocket, ENetAddress*);
   *}
   */
  public static int enet_socket_accept(int x0, MemorySegment x1) {
    var mh$ = enet_socket_accept$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_connect$MH() {
    return RuntimeHelper.requireNonNull(constants$41.const$1, "enet_socket_connect");
  }

  /**
   * {@snippet :
   * int enet_socket_connect(ENetSocket, const ENetAddress*);
   *}
   */
  public static int enet_socket_connect(int x0, MemorySegment x1) {
    var mh$ = enet_socket_connect$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_send$MH() {
    return RuntimeHelper.requireNonNull(constants$41.const$3, "enet_socket_send");
  }

  /**
   * {@snippet :
   * int enet_socket_send(ENetSocket, const ENetAddress*, const ENetBuffer*, size_t);
   *}
   */
  public static int enet_socket_send(int x0, MemorySegment x1, MemorySegment x2, long x3) {
    var mh$ = enet_socket_send$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2, x3);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_receive$MH() {
    return RuntimeHelper.requireNonNull(constants$41.const$4, "enet_socket_receive");
  }

  /**
   * {@snippet :
   * int enet_socket_receive(ENetSocket, ENetAddress*, ENetBuffer*, size_t);
   *}
   */
  public static int enet_socket_receive(int x0, MemorySegment x1, MemorySegment x2, long x3) {
    var mh$ = enet_socket_receive$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2, x3);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_wait$MH() {
    return RuntimeHelper.requireNonNull(constants$41.const$6, "enet_socket_wait");
  }

  /**
   * {@snippet :
   * int enet_socket_wait(ENetSocket, enet_uint32*, enet_uint32);
   *}
   */
  public static int enet_socket_wait(int x0, MemorySegment x1, int x2) {
    var mh$ = enet_socket_wait$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_set_option$MH() {
    return RuntimeHelper.requireNonNull(constants$42.const$1, "enet_socket_set_option");
  }

  /**
   * {@snippet :
   * int enet_socket_set_option(ENetSocket, ENetSocketOption, int);
   *}
   */
  public static int enet_socket_set_option(int x0, int x1, int x2) {
    var mh$ = enet_socket_set_option$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_get_option$MH() {
    return RuntimeHelper.requireNonNull(constants$42.const$3, "enet_socket_get_option");
  }

  /**
   * {@snippet :
   * int enet_socket_get_option(ENetSocket, ENetSocketOption, int*);
   *}
   */
  public static int enet_socket_get_option(int x0, int x1, MemorySegment x2) {
    var mh$ = enet_socket_get_option$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_shutdown$MH() {
    return RuntimeHelper.requireNonNull(constants$42.const$4, "enet_socket_shutdown");
  }

  /**
   * {@snippet :
   * int enet_socket_shutdown(ENetSocket, ENetSocketShutdown);
   *}
   */
  public static int enet_socket_shutdown(int x0, int x1) {
    var mh$ = enet_socket_shutdown$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socket_destroy$MH() {
    return RuntimeHelper.requireNonNull(constants$42.const$5, "enet_socket_destroy");
  }

  /**
   * {@snippet :
   * void enet_socket_destroy(ENetSocket);
   *}
   */
  public static void enet_socket_destroy(int x0) {
    var mh$ = enet_socket_destroy$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_socketset_select$MH() {
    return RuntimeHelper.requireNonNull(constants$43.const$1, "enet_socketset_select");
  }

  /**
   * {@snippet :
   * int enet_socketset_select(ENetSocket, ENetSocketSet*, ENetSocketSet*, enet_uint32);
   *}
   */
  public static int enet_socketset_select(int x0, MemorySegment x1, MemorySegment x2, int x3) {
    var mh$ = enet_socketset_select$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2, x3);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_address_set_host_ip$MH() {
    return RuntimeHelper.requireNonNull(constants$43.const$2, "enet_address_set_host_ip");
  }

  /**
   * {@snippet :
   * int enet_address_set_host_ip(ENetAddress* address, char* hostName);
   *}
   */
  public static int enet_address_set_host_ip(MemorySegment address, MemorySegment hostName) {
    var mh$ = enet_address_set_host_ip$MH();
    try {
      return (int) mh$.invokeExact(address, hostName);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_address_set_host$MH() {
    return RuntimeHelper.requireNonNull(constants$43.const$3, "enet_address_set_host");
  }

  /**
   * {@snippet :
   * int enet_address_set_host(ENetAddress* address, char* hostName);
   *}
   */
  public static int enet_address_set_host(MemorySegment address, MemorySegment hostName) {
    var mh$ = enet_address_set_host$MH();
    try {
      return (int) mh$.invokeExact(address, hostName);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_address_get_host_ip$MH() {
    return RuntimeHelper.requireNonNull(constants$43.const$5, "enet_address_get_host_ip");
  }

  /**
   * {@snippet :
   * int enet_address_get_host_ip(const ENetAddress* address, char* hostName, size_t nameLength);
   *}
   */
  public static int enet_address_get_host_ip(MemorySegment address, MemorySegment hostName, long nameLength) {
    var mh$ = enet_address_get_host_ip$MH();
    try {
      return (int) mh$.invokeExact(address, hostName, nameLength);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_address_get_host$MH() {
    return RuntimeHelper.requireNonNull(constants$44.const$0, "enet_address_get_host");
  }

  /**
   * {@snippet :
   * int enet_address_get_host(const ENetAddress* address, char* hostName, size_t nameLength);
   *}
   */
  public static int enet_address_get_host(MemorySegment address, MemorySegment hostName, long nameLength) {
    var mh$ = enet_address_get_host$MH();
    try {
      return (int) mh$.invokeExact(address, hostName, nameLength);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_packet_create$MH() {
    return RuntimeHelper.requireNonNull(constants$44.const$2, "enet_packet_create");
  }

  /**
   * {@snippet :
   * ENetPacket* enet_packet_create(void*, size_t, enet_uint32);
   *}
   */
  public static MemorySegment enet_packet_create(MemorySegment x0, long x1, int x2) {
    var mh$ = enet_packet_create$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_packet_destroy$MH() {
    return RuntimeHelper.requireNonNull(constants$44.const$3, "enet_packet_destroy");
  }

  /**
   * {@snippet :
   * void enet_packet_destroy(ENetPacket*);
   *}
   */
  public static void enet_packet_destroy(MemorySegment x0) {
    var mh$ = enet_packet_destroy$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_packet_resize$MH() {
    return RuntimeHelper.requireNonNull(constants$44.const$4, "enet_packet_resize");
  }

  /**
   * {@snippet :
   * int enet_packet_resize(ENetPacket*, size_t);
   *}
   */
  public static int enet_packet_resize(MemorySegment x0, long x1) {
    var mh$ = enet_packet_resize$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_crc32$MH() {
    return RuntimeHelper.requireNonNull(constants$44.const$5, "enet_crc32");
  }

  /**
   * {@snippet :
   * enet_uint32 enet_crc32(const ENetBuffer*, size_t);
   *}
   */
  public static int enet_crc32(MemorySegment x0, long x1) {
    var mh$ = enet_crc32$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_create$MH() {
    return RuntimeHelper.requireNonNull(constants$45.const$1, "enet_host_create");
  }

  /**
   * {@snippet :
   * ENetHost* enet_host_create(const ENetAddress*, size_t, size_t, enet_uint32, enet_uint32);
   *}
   */
  public static MemorySegment enet_host_create(MemorySegment x0, long x1, long x2, int x3, int x4) {
    var mh$ = enet_host_create$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1, x2, x3, x4);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_destroy$MH() {
    return RuntimeHelper.requireNonNull(constants$45.const$2, "enet_host_destroy");
  }

  /**
   * {@snippet :
   * void enet_host_destroy(ENetHost*);
   *}
   */
  public static void enet_host_destroy(MemorySegment x0) {
    var mh$ = enet_host_destroy$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_connect$MH() {
    return RuntimeHelper.requireNonNull(constants$45.const$4, "enet_host_connect");
  }

  /**
   * {@snippet :
   * ENetPeer* enet_host_connect(ENetHost*, const ENetAddress*, size_t, enet_uint32);
   *}
   */
  public static MemorySegment enet_host_connect(MemorySegment x0, MemorySegment x1, long x2, int x3) {
    var mh$ = enet_host_connect$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1, x2, x3);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_check_events$MH() {
    return RuntimeHelper.requireNonNull(constants$45.const$5, "enet_host_check_events");
  }

  /**
   * {@snippet :
   * int enet_host_check_events(ENetHost*, ENetEvent*);
   *}
   */
  public static int enet_host_check_events(MemorySegment x0, MemorySegment x1) {
    var mh$ = enet_host_check_events$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_service$MH() {
    return RuntimeHelper.requireNonNull(constants$46.const$1, "enet_host_service");
  }

  /**
   * {@snippet :
   * int enet_host_service(ENetHost*, ENetEvent*, enet_uint32);
   *}
   */
  public static int enet_host_service(MemorySegment x0, MemorySegment x1, int x2) {
    var mh$ = enet_host_service$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_flush$MH() {
    return RuntimeHelper.requireNonNull(constants$46.const$2, "enet_host_flush");
  }

  /**
   * {@snippet :
   * void enet_host_flush(ENetHost*);
   *}
   */
  public static void enet_host_flush(MemorySegment x0) {
    var mh$ = enet_host_flush$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_broadcast$MH() {
    return RuntimeHelper.requireNonNull(constants$46.const$4, "enet_host_broadcast");
  }

  /**
   * {@snippet :
   * void enet_host_broadcast(ENetHost*, enet_uint8, ENetPacket*);
   *}
   */
  public static void enet_host_broadcast(MemorySegment x0, byte x1, MemorySegment x2) {
    var mh$ = enet_host_broadcast$MH();
    try {
      mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_compress$MH() {
    return RuntimeHelper.requireNonNull(constants$46.const$6, "enet_host_compress");
  }

  /**
   * {@snippet :
   * void enet_host_compress(ENetHost*, const ENetCompressor*);
   *}
   */
  public static void enet_host_compress(MemorySegment x0, MemorySegment x1) {
    var mh$ = enet_host_compress$MH();
    try {
      mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_compress_with_range_coder$MH() {
    return RuntimeHelper.requireNonNull(constants$47.const$1, "enet_host_compress_with_range_coder");
  }

  /**
   * {@snippet :
   * int enet_host_compress_with_range_coder(ENetHost* host);
   *}
   */
  public static int enet_host_compress_with_range_coder(MemorySegment host) {
    var mh$ = enet_host_compress_with_range_coder$MH();
    try {
      return (int) mh$.invokeExact(host);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_channel_limit$MH() {
    return RuntimeHelper.requireNonNull(constants$47.const$3, "enet_host_channel_limit");
  }

  /**
   * {@snippet :
   * void enet_host_channel_limit(ENetHost*, size_t);
   *}
   */
  public static void enet_host_channel_limit(MemorySegment x0, long x1) {
    var mh$ = enet_host_channel_limit$MH();
    try {
      mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_bandwidth_limit$MH() {
    return RuntimeHelper.requireNonNull(constants$47.const$5, "enet_host_bandwidth_limit");
  }

  /**
   * {@snippet :
   * void enet_host_bandwidth_limit(ENetHost*, enet_uint32, enet_uint32);
   *}
   */
  public static void enet_host_bandwidth_limit(MemorySegment x0, int x1, int x2) {
    var mh$ = enet_host_bandwidth_limit$MH();
    try {
      mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_bandwidth_throttle$MH() {
    return RuntimeHelper.requireNonNull(constants$48.const$0, "enet_host_bandwidth_throttle");
  }

  /**
   * {@snippet :
   * void enet_host_bandwidth_throttle(ENetHost*);
   *}
   */
  public static void enet_host_bandwidth_throttle(MemorySegment x0) {
    var mh$ = enet_host_bandwidth_throttle$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_host_random_seed$MH() {
    return RuntimeHelper.requireNonNull(constants$48.const$1, "enet_host_random_seed");
  }

  /**
   * {@snippet :
   * enet_uint32 enet_host_random_seed();
   *}
   */
  public static int enet_host_random_seed() {
    var mh$ = enet_host_random_seed$MH();
    try {
      return (int) mh$.invokeExact();
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_send$MH() {
    return RuntimeHelper.requireNonNull(constants$48.const$3, "enet_peer_send");
  }

  /**
   * {@snippet :
   * int enet_peer_send(ENetPeer*, enet_uint8, ENetPacket*);
   *}
   */
  public static int enet_peer_send(MemorySegment x0, byte x1, MemorySegment x2) {
    var mh$ = enet_peer_send$MH();
    try {
      return (int) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_receive$MH() {
    return RuntimeHelper.requireNonNull(constants$48.const$4, "enet_peer_receive");
  }

  /**
   * {@snippet :
   * ENetPacket* enet_peer_receive(ENetPeer*, enet_uint8* channelID);
   *}
   */
  public static MemorySegment enet_peer_receive(MemorySegment x0, MemorySegment channelID) {
    var mh$ = enet_peer_receive$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, channelID);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_ping$MH() {
    return RuntimeHelper.requireNonNull(constants$48.const$5, "enet_peer_ping");
  }

  /**
   * {@snippet :
   * void enet_peer_ping(ENetPeer*);
   *}
   */
  public static void enet_peer_ping(MemorySegment x0) {
    var mh$ = enet_peer_ping$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_ping_interval$MH() {
    return RuntimeHelper.requireNonNull(constants$49.const$1, "enet_peer_ping_interval");
  }

  /**
   * {@snippet :
   * void enet_peer_ping_interval(ENetPeer*, enet_uint32);
   *}
   */
  public static void enet_peer_ping_interval(MemorySegment x0, int x1) {
    var mh$ = enet_peer_ping_interval$MH();
    try {
      mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_timeout$MH() {
    return RuntimeHelper.requireNonNull(constants$49.const$3, "enet_peer_timeout");
  }

  /**
   * {@snippet :
   * void enet_peer_timeout(ENetPeer*, enet_uint32, enet_uint32, enet_uint32);
   *}
   */
  public static void enet_peer_timeout(MemorySegment x0, int x1, int x2, int x3) {
    var mh$ = enet_peer_timeout$MH();
    try {
      mh$.invokeExact(x0, x1, x2, x3);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_reset$MH() {
    return RuntimeHelper.requireNonNull(constants$49.const$4, "enet_peer_reset");
  }

  /**
   * {@snippet :
   * void enet_peer_reset(ENetPeer*);
   *}
   */
  public static void enet_peer_reset(MemorySegment x0) {
    var mh$ = enet_peer_reset$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_disconnect$MH() {
    return RuntimeHelper.requireNonNull(constants$49.const$5, "enet_peer_disconnect");
  }

  /**
   * {@snippet :
   * void enet_peer_disconnect(ENetPeer*, enet_uint32);
   *}
   */
  public static void enet_peer_disconnect(MemorySegment x0, int x1) {
    var mh$ = enet_peer_disconnect$MH();
    try {
      mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_disconnect_now$MH() {
    return RuntimeHelper.requireNonNull(constants$50.const$0, "enet_peer_disconnect_now");
  }

  /**
   * {@snippet :
   * void enet_peer_disconnect_now(ENetPeer*, enet_uint32);
   *}
   */
  public static void enet_peer_disconnect_now(MemorySegment x0, int x1) {
    var mh$ = enet_peer_disconnect_now$MH();
    try {
      mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_disconnect_later$MH() {
    return RuntimeHelper.requireNonNull(constants$50.const$1, "enet_peer_disconnect_later");
  }

  /**
   * {@snippet :
   * void enet_peer_disconnect_later(ENetPeer*, enet_uint32);
   *}
   */
  public static void enet_peer_disconnect_later(MemorySegment x0, int x1) {
    var mh$ = enet_peer_disconnect_later$MH();
    try {
      mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_throttle_configure$MH() {
    return RuntimeHelper.requireNonNull(constants$50.const$2, "enet_peer_throttle_configure");
  }

  /**
   * {@snippet :
   * void enet_peer_throttle_configure(ENetPeer*, enet_uint32, enet_uint32, enet_uint32);
   *}
   */
  public static void enet_peer_throttle_configure(MemorySegment x0, int x1, int x2, int x3) {
    var mh$ = enet_peer_throttle_configure$MH();
    try {
      mh$.invokeExact(x0, x1, x2, x3);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_throttle$MH() {
    return RuntimeHelper.requireNonNull(constants$50.const$4, "enet_peer_throttle");
  }

  /**
   * {@snippet :
   * int enet_peer_throttle(ENetPeer*, enet_uint32);
   *}
   */
  public static int enet_peer_throttle(MemorySegment x0, int x1) {
    var mh$ = enet_peer_throttle$MH();
    try {
      return (int) mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_reset_queues$MH() {
    return RuntimeHelper.requireNonNull(constants$50.const$5, "enet_peer_reset_queues");
  }

  /**
   * {@snippet :
   * void enet_peer_reset_queues(ENetPeer*);
   *}
   */
  public static void enet_peer_reset_queues(MemorySegment x0) {
    var mh$ = enet_peer_reset_queues$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_setup_outgoing_command$MH() {
    return RuntimeHelper.requireNonNull(constants$51.const$0, "enet_peer_setup_outgoing_command");
  }

  /**
   * {@snippet :
   * void enet_peer_setup_outgoing_command(ENetPeer*, ENetOutgoingCommand*);
   *}
   */
  public static void enet_peer_setup_outgoing_command(MemorySegment x0, MemorySegment x1) {
    var mh$ = enet_peer_setup_outgoing_command$MH();
    try {
      mh$.invokeExact(x0, x1);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_queue_outgoing_command$MH() {
    return RuntimeHelper.requireNonNull(constants$51.const$2, "enet_peer_queue_outgoing_command");
  }

  /**
   * {@snippet :
   * ENetOutgoingCommand* enet_peer_queue_outgoing_command(ENetPeer*, const ENetProtocol*, ENetPacket*, enet_uint32, enet_uint16);
   *}
   */
  public static MemorySegment enet_peer_queue_outgoing_command(MemorySegment x0, MemorySegment x1, MemorySegment x2, int x3, short x4) {
    var mh$ = enet_peer_queue_outgoing_command$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1, x2, x3, x4);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_queue_incoming_command$MH() {
    return RuntimeHelper.requireNonNull(constants$51.const$4, "enet_peer_queue_incoming_command");
  }

  /**
   * {@snippet :
   * ENetIncomingCommand* enet_peer_queue_incoming_command(ENetPeer*, const ENetProtocol*, void*, size_t, enet_uint32, enet_uint32);
   *}
   */
  public static MemorySegment enet_peer_queue_incoming_command(MemorySegment x0, MemorySegment x1, MemorySegment x2, long x3, int x4, int x5) {
    var mh$ = enet_peer_queue_incoming_command$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1, x2, x3, x4, x5);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_queue_acknowledgement$MH() {
    return RuntimeHelper.requireNonNull(constants$51.const$6, "enet_peer_queue_acknowledgement");
  }

  /**
   * {@snippet :
   * ENetAcknowledgement* enet_peer_queue_acknowledgement(ENetPeer*, const ENetProtocol*, enet_uint16);
   *}
   */
  public static MemorySegment enet_peer_queue_acknowledgement(MemorySegment x0, MemorySegment x1, short x2) {
    var mh$ = enet_peer_queue_acknowledgement$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_dispatch_incoming_unreliable_commands$MH() {
    return RuntimeHelper.requireNonNull(constants$52.const$1, "enet_peer_dispatch_incoming_unreliable_commands");
  }

  /**
   * {@snippet :
   * void enet_peer_dispatch_incoming_unreliable_commands(ENetPeer*, ENetChannel*, ENetIncomingCommand*);
   *}
   */
  public static void enet_peer_dispatch_incoming_unreliable_commands(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
    var mh$ = enet_peer_dispatch_incoming_unreliable_commands$MH();
    try {
      mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_dispatch_incoming_reliable_commands$MH() {
    return RuntimeHelper.requireNonNull(constants$52.const$2, "enet_peer_dispatch_incoming_reliable_commands");
  }

  /**
   * {@snippet :
   * void enet_peer_dispatch_incoming_reliable_commands(ENetPeer*, ENetChannel*, ENetIncomingCommand*);
   *}
   */
  public static void enet_peer_dispatch_incoming_reliable_commands(MemorySegment x0, MemorySegment x1, MemorySegment x2) {
    var mh$ = enet_peer_dispatch_incoming_reliable_commands$MH();
    try {
      mh$.invokeExact(x0, x1, x2);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_on_connect$MH() {
    return RuntimeHelper.requireNonNull(constants$52.const$3, "enet_peer_on_connect");
  }

  /**
   * {@snippet :
   * void enet_peer_on_connect(ENetPeer*);
   *}
   */
  public static void enet_peer_on_connect(MemorySegment x0) {
    var mh$ = enet_peer_on_connect$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_peer_on_disconnect$MH() {
    return RuntimeHelper.requireNonNull(constants$52.const$4, "enet_peer_on_disconnect");
  }

  /**
   * {@snippet :
   * void enet_peer_on_disconnect(ENetPeer*);
   *}
   */
  public static void enet_peer_on_disconnect(MemorySegment x0) {
    var mh$ = enet_peer_on_disconnect$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_range_coder_create$MH() {
    return RuntimeHelper.requireNonNull(constants$52.const$6, "enet_range_coder_create");
  }

  /**
   * {@snippet :
   * void* enet_range_coder_create();
   *}
   */
  public static MemorySegment enet_range_coder_create() {
    var mh$ = enet_range_coder_create$MH();
    try {
      return (java.lang.foreign.MemorySegment) mh$.invokeExact();
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_range_coder_destroy$MH() {
    return RuntimeHelper.requireNonNull(constants$53.const$0, "enet_range_coder_destroy");
  }

  /**
   * {@snippet :
   * void enet_range_coder_destroy(void*);
   *}
   */
  public static void enet_range_coder_destroy(MemorySegment x0) {
    var mh$ = enet_range_coder_destroy$MH();
    try {
      mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_range_coder_compress$MH() {
    return RuntimeHelper.requireNonNull(constants$53.const$1, "enet_range_coder_compress");
  }

  /**
   * {@snippet :
   * size_t enet_range_coder_compress(void*, const ENetBuffer*, size_t, size_t, enet_uint8*, size_t);
   *}
   */
  public static long enet_range_coder_compress(MemorySegment x0, MemorySegment x1, long x2, long x3, MemorySegment x4, long x5) {
    var mh$ = enet_range_coder_compress$MH();
    try {
      return (long) mh$.invokeExact(x0, x1, x2, x3, x4, x5);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_range_coder_decompress$MH() {
    return RuntimeHelper.requireNonNull(constants$53.const$2, "enet_range_coder_decompress");
  }

  /**
   * {@snippet :
   * size_t enet_range_coder_decompress(void*, const enet_uint8*, size_t, enet_uint8*, size_t);
   *}
   */
  public static long enet_range_coder_decompress(MemorySegment x0, MemorySegment x1, long x2, MemorySegment x3, long x4) {
    var mh$ = enet_range_coder_decompress$MH();
    try {
      return (long) mh$.invokeExact(x0, x1, x2, x3, x4);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  public static MethodHandle enet_protocol_command_size$MH() {
    return RuntimeHelper.requireNonNull(constants$53.const$4, "enet_protocol_command_size");
  }

  /**
   * {@snippet :
   * size_t enet_protocol_command_size(enet_uint8);
   *}
   */
  public static long enet_protocol_command_size(byte x0) {
    var mh$ = enet_protocol_command_size$MH();
    try {
      return (long) mh$.invokeExact(x0);
    } catch (Throwable ex$) {
      throw new AssertionError("should not reach here", ex$);
    }
  }

  /**
   * {@snippet :
   * #define NULL 0
   *}
   */
  public static MemorySegment NULL() {
    return constants$53.const$5;
  }

  /**
   * {@snippet :
   * #define ENET_VERSION 66321
   *}
   */
  public static int ENET_VERSION() {
    return (int) 66321L;
  }

  /**
   * {@snippet :
   * #define ENET_HOST_BROADCAST 4294967295
   *}
   */
  public static int ENET_HOST_BROADCAST() {
    return (int) 4294967295L;
  }

  /**
   * {@snippet :
   * #define ENET_BUFFER_MAXIMUM 65
   *}
   */
  public static int ENET_BUFFER_MAXIMUM() {
    return (int) 65L;
  }
}


